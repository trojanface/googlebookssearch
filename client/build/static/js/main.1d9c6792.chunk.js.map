{"version":3,"sources":["logo.svg","services/API.js","expressComponent.js","components/MenuBar.js","components/Book.js","scenes/Saved/index.js","scenes/Search/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getBooks","axios","get","findBooksGoogle","query","addBook","book","console","log","description","authorReturn","undefined","authors","length","join","post","title","author","synopsis","link","image","thumbnail","deleteBook","id","delete","Component","MenuBar","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","Book","props","className","src","alt","onClick","isSearch","saveBook","map","element","index","target","Saved","useState","bookList","setBookList","API","then","res","data","catch","err","useEffect","style","listStyle","key","_id","Search","searchList","setSearchList","searchTerm","setSearchTerm","onSubmit","event","preventDefault","items","value","onChange","placeholder","volumeInfo","imageLinks","smallThumbnail","canonicalVolumeLink","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1d9c6792.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\r\n\r\nexport default {\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\")\r\n    },\r\n    findBooksGoogle: function (query) {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`)\r\n    },\r\n    addBook: function (book) {\r\n        console.log(book.description)\r\n        let authorReturn = \"\";\r\n        if (book.authors !== undefined) {\r\n            console.log(\"true\")\r\n            if (book.authors.length > 1) {\r\n                authorReturn = book.authors.join();\r\n            } else {\r\n                authorReturn = book.authors[0]\r\n            }\r\n        } else {\r\n            console.log(\"false\")\r\n            authorReturn = \"Unknown\"\r\n        }\r\n        return axios.post('/api/books',{title: book.title, author: authorReturn, synopsis: book.description, link: book.link, image: book.thumbnail})\r\n    },\r\n    deleteBook: function (id) {\r\n        return axios.delete(`/api/books/${id}`)\r\n    }\r\n}\r\n\r\n//TODO need to add new books from the google API to the db and then delete books from db and then general styling\r\n","import React, { Component } from 'react'\r\nimport API from \"./services/API\"\r\nexport class expressComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { apiResponse: \"\" };\r\n    }\r\n    \r\n    callAPI() {\r\n        API.testRoute()\r\n            .then(res => this.setState({ apiResponse: res.data }));\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.callAPI();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"App-intro\">;{this.state.apiResponse}</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default expressComponent\r\n","import React from 'react'\r\n\r\nexport default function MenuBar() {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">Tome Raider</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"/>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" aria-current=\"page\" href=\"/\">Search for a tome</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/saved\">Your saved tomes</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Book(props) {\r\n    return (\r\n        <div>\r\n\r\n            \r\n\r\n\r\n            <div className=\"card mb-3\" >\r\n  <div className=\"row g-0\">\r\n    <div className=\"col-md-4\">\r\n        <div>\r\n      <img src={props.thumbnail}  alt={`An image of ${props.title}`} />\r\n      </div>\r\n      <div>\r\n      <button className=\"btn btn-primary mt-2\" onClick={props.isSearch ? () => {props.saveBook(props)} :  () => {props.deleteBook(props)}}>{props.isSearch ? \"Save to your list\" : \"Remove from list\"}</button>\r\n      </div>\r\n    </div>\r\n    <div className=\"col-md-8\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.title}</h5>\r\n        <p className=\"card-text\">{props.authors ? ` ${props.authors.map((element, index) => {return element })}`: \" Unknown\"}</p>\r\n        <p className=\"card-text\">{props.description}</p>\r\n        <h5><a target=\"_blank\" href={props.link}>View here</a></h5>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport API from '../../services/API'\r\nimport MenuBar from '../../components/MenuBar';\r\nimport Book from '../../components/Book';\r\n\r\nexport default function Saved() {\r\n\r\n    const [bookList, setBookList] = useState([]);\r\n    \r\n    function getBooks () {\r\n        API.getBooks().then((res) => {\r\n            console.log(res.data);\r\n            setBookList(res.data);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getBooks()\r\n    }, []);\r\n\r\n    function deleteBook (book) {\r\n        console.log(book.id)\r\n        API.deleteBook(book.id).then(getBooks());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <MenuBar />\r\n            <div className=\"container\">\r\n            <h1>Your Saved Tomes</h1>\r\n            <ul style={{listStyle : \"none\"}}>\r\n            {bookList.map((element,index) => {\r\n                return <li key={index}><Book id={element._id} isSearch={false} deleteBook={deleteBook} title={element.title} thumbnail={element.image} description={element.synopsis}\r\n                authors={[element.author]} link={element.link}/> </li>\r\n            })}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport API from '../../services/API';\r\nimport Book from '../../components/Book';\r\nimport MenuBar from '../../components/MenuBar';\r\n\r\nexport default function Search() {\r\n    const [searchList, setSearchList] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\nfunction searchGoogle(event) {\r\n    event.preventDefault();\r\n    API.findBooksGoogle(searchTerm).then((res) => {\r\n        \r\n        setSearchList(res.data.items);\r\n    }\r\n    ).catch((err) => {\r\n        console.log(err)\r\n    });\r\n}\r\n\r\n    useEffect(() => {\r\n        console.log(searchList)\r\n    }, [searchList])\r\n\r\nfunction updateTerm (event) {\r\nsetSearchTerm(event.target.value);\r\n}\r\n\r\nfunction saveBook (book) {\r\nAPI.addBook(book);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <MenuBar />\r\n            <div className=\"container\">\r\n            <div class=\"mb-3\">\r\n            <form onSubmit={searchGoogle}>\r\n  <h1>Find a hefty tome</h1>\r\n  <input type=\"text\" class=\"form-control\" value={searchTerm} onChange={updateTerm} placeholder=\"Search by title\"></input>\r\n  <div class=\"col-auto\">\r\n  <button type=\"submit\" class=\"btn btn-primary mt-2 mb-3\">Search</button>\r\n  </div>\r\n  </form>\r\n</div>\r\n            \r\n\r\n\r\n            <h3>Search Results:</h3>\r\n            <ul style={{listStyle : \"none\"}}>\r\n            {searchList.map((element,index) => {\r\n                return <li key={index}><Book isSearch={true} saveBook={saveBook} title={element.volumeInfo.title} thumbnail={element.volumeInfo.imageLinks.smallThumbnail} description={element.volumeInfo.description}\r\n                authors={element.volumeInfo.authors} link={element.volumeInfo.canonicalVolumeLink}/></li>\r\n                \r\n            })}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport ExpressComponent from './expressComponent';\nimport Saved from './scenes/Saved';\nimport Search from './scenes/Search';\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n      <Switch>\n      <Route exact path=\"/\">\n       <Search/>\n        </Route>\n        <Route path=\"/saved\">\n        <Saved />\n        </Route>\n      </Switch>\n      \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}